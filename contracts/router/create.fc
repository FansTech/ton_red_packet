#include "../imports/stdlib.fc";
#include "../lib/export.fc";
#include "../utils/export.fc";

#include "../red_packet/export.fc";

#include "storage1.fc";
#include "report.fc";

() @create(
int red_packet_index:u64,
int red_packet_type:u8,
int total_pack:u16,
int amount:u256,
slice token:addr,
slice creator:addr,
int deadline:u32,
int perfee:u256
) impure inline_ref {

    int value_remaining = fee::router::create(perfee:u256, my_balance:coin, msg_value:coin);

    cell red_packet_state_init:cell = red_packet::state_init(
        _red_packet_base_code:cell,
        _code_manager_public_key:u256,
        my_address(),
        red_packet_index:u64
    );

    slice red_packet_address = calculate_address(red_packet_state_init:cell);
    send_message_ref(
        fee::red_packet::deploy::tx_fee(),
        red_packet_address,
        op::red_packet::deploy,
        query_id:u64,
        begin_cell()
            .store_ref(_red_packet_deployment:cell)
            .end_cell(),
        PAID_EXTERNALLY,
        TRUE:u1,
        red_packet_state_init:cell
    );

    send_message_ref(
        value_remaining + fee::red_packet::init::tx_fee(),
        red_packet_address,
        op::red_packet::init,
        query_id:u64,
        red_packet::Init::se(
            red_packet_type:u8,
            total_pack:u16,
            token:addr,
            amount:u256,
            creator:addr,
            deadline:u32,
            perfee:u256
        ),
        PAID_EXTERNALLY,
        TRUE:u1,
        null()
    );

    return ();
}
